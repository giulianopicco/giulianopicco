[{"/home/max/Dev/Porfolio/portfolio/src/index.js":"1","/home/max/Dev/Porfolio/portfolio/src/App.js":"2","/home/max/Dev/Porfolio/portfolio/src/reportWebVitals.js":"3","/home/max/Dev/Porfolio/portfolio/src/components/Home.js":"4","/home/max/Dev/Porfolio/portfolio/src/components/About.js":"5","/home/max/Dev/Porfolio/portfolio/src/components/Post.js":"6","/home/max/Dev/Porfolio/portfolio/src/components/Project.js":"7","/home/max/Dev/Porfolio/portfolio/src/components/SinglePost.js":"8","/home/max/Dev/Porfolio/portfolio/src/components/NavBar.js":"9","/home/max/Dev/Porfolio/portfolio/src/client.js":"10"},{"size":500,"mtime":1608846511675,"results":"11","hashOfConfig":"12"},{"size":776,"mtime":1608852624992,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1608846511675,"results":"14","hashOfConfig":"12"},{"size":545,"mtime":1608855300065,"results":"15","hashOfConfig":"12"},{"size":139,"mtime":1608849972668,"results":"16","hashOfConfig":"12"},{"size":2005,"mtime":1609543405493,"results":"17","hashOfConfig":"12"},{"size":2673,"mtime":1609544288266,"results":"18","hashOfConfig":"12"},{"size":1321,"mtime":1609546373847,"results":"19","hashOfConfig":"12"},{"size":1946,"mtime":1608854369576,"results":"20","hashOfConfig":"12"},{"size":128,"mtime":1608847847752,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"t9dnn3",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/home/max/Dev/Porfolio/portfolio/src/index.js",[],["47","48"],"/home/max/Dev/Porfolio/portfolio/src/App.js",[],"/home/max/Dev/Porfolio/portfolio/src/reportWebVitals.js",[],"/home/max/Dev/Porfolio/portfolio/src/components/Home.js",["49"],"import React from \"react\";\nimport image from \"../bg-cosmos.jpg\";\n\nconst Home = () => {\n  return (\n    <main>\n      <img\n        src={image}\n        alt=\"cosmos background image\"\n        className=\"absolute object-cover w-full h-full\"\n      />\n      <section className=\"relative flex justify-center min-h-screen pt-12 lg:pt-64 px-8\">\n        <h1 className=\"text-6x text-green-100 font-bold cursive leading none lg:leading snug home-name\">\n          \"Hello World\". I'm Max.\n        </h1>\n      </section>\n    </main>\n  );\n};\n\nexport default Home;\n","/home/max/Dev/Porfolio/portfolio/src/components/About.js",[],"/home/max/Dev/Porfolio/portfolio/src/components/Post.js",[],"/home/max/Dev/Porfolio/portfolio/src/components/Project.js",["50","51"],"import Reactm, { useState, useEffect } from \"react\";\nimport sanityClient from \"../client\";\n\nconst Project = () => {\n  const [projects, setProjects] = useState(null);\n\n  useEffect(() => {\n    sanityClient\n      .fetch(\n        `*[_type == \"project\"]{\n          title,\n          date,\n          place,\n          description,\n          projectType,\n          link,\n          tags,\n        }`\n      )\n      .then((data) => setProjects(data))\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <main className=\"bg-green-100 min-h-screen p-12\">\n      <section className=\"container mx-auto\">\n        <h1 className=\"text-5xl flex justify-center cursive\"> My Projects</h1>\n        <h2 className=\"text-lg text-gray-600 flex justify-center mb-12\">\n          Welcome to my projects page!\n        </h2>\n        <section className=\"grid grid-cols-2 gap-8\">\n          {projects &&\n            projects.map((project, index) => (\n              <article className=\"relative rounded-lg shadow-xl bg-white p-16\">\n                <h3 className=\"text-gray-800 text-3xl font-bold mb-2 hover:text-red-700\">\n                  <a href={project.link} alt={project.title} target=\"_blank\">\n                    {project.title}\n                  </a>\n                </h3>\n                <div className=\"text-gray-500 text-xs space-x-4\">\n                  {project.date && (\n                    <span>\n                      <strong className=\"font-gold\">Finished on</strong>:{\" \"}\n                      {new Date(project.date).toLocaleTimeString()}\n                    </span>\n                  )}\n                  <span>\n                    <strong className=\"font-bold\">Company</strong>:&nbsp;\n                    {project.place}\n                  </span>\n                  <span>\n                    <strong className=\"font-bold\">Type</strong>:&nbsp;\n                    {project.projectType}\n                  </span>\n                  <p className=\"my-6 text-lg text-gray-700 leading-relaxed\">\n                    {\" \"}\n                    {project.description}\n                  </p>\n                  <a\n                    href={project.link}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                    className=\"text-red-500 font-bold hover:underline text hover:tet-red-400 text-xl\"\n                  >\n                    View the project&nbsp;\n                    <span role=\"img\" aria-label=\"right pointer\">\n                      ðŸ‘‰\n                    </span>\n                  </a>\n                </div>\n              </article>\n            ))}\n        </section>\n      </section>\n    </main>\n  );\n};\n\nexport default Project;\n","/home/max/Dev/Porfolio/portfolio/src/components/SinglePost.js",["52","53"],"import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport sanityClient from \"../client\";\nimport imageUrlBuilder from \"@sanity/image-url\";\n\nconst builder = imageUrlBuilder(sanityClient);\nfunction urlFor(source) {\n  return builder.image(source);\n}\n\nconst SinglePost = () => {\n  const [singlePost, setSinglePost] = useState(null);\n  const { slug } = useParams();\n\n  useEffect(() => {\n    sanityClient\n      .fetch(\n        `*[slug.current == \"${slug}\"]{\n        title,\n        _id,\n        slug,\n        mainImage{\n          asset->{\n            _id,\n            url\n          }\n        },\n        body,\n        \"name\": author->name,\n        \"authorImage\": author->image\n      }`\n      )\n      .then((data) => setSinglePost(data[0]))\n      .catch((err) => console.log(err));\n  }, [slug]);\n  if (!singlePost) return <div>Loading...</div>;\n\n  return (\n    <main>\n      <article>\n        <header>\n          <div>\n            <div>\n              <h1 class=\"bg-gray-200 min-h-screen p-12\"></h1>\n              <div>\n                <img src=\"\" alt=\"\" />\n                <p></p>\n              </div>\n            </div>\n          </div>\n          <img src=\"\" alt=\"\" />\n        </header>\n        <div>Block Content</div>\n      </article>\n    </main>\n  );\n};\n\nexport default SinglePost;\n","/home/max/Dev/Porfolio/portfolio/src/components/NavBar.js",[],"/home/max/Dev/Porfolio/portfolio/src/client.js",[],["54","55"],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":7,"column":7,"nodeType":"62","endLine":11,"endColumn":9},{"ruleId":"63","severity":1,"message":"64","line":1,"column":8,"nodeType":"65","messageId":"66","endLine":1,"endColumn":14},{"ruleId":"67","severity":1,"message":"68","line":36,"column":62,"nodeType":"69","endLine":36,"endColumn":77},{"ruleId":"63","severity":1,"message":"70","line":7,"column":10,"nodeType":"65","messageId":"66","endLine":7,"endColumn":16},{"ruleId":"71","severity":1,"message":"72","line":44,"column":15,"nodeType":"62","endLine":44,"endColumn":57},{"ruleId":"56","replacedBy":"73"},{"ruleId":"58","replacedBy":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'Reactm' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'urlFor' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.",["75"],["76"],"no-global-assign","no-unsafe-negation"]